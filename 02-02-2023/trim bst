/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int predecessor(TreeNode root){
        while(root.right!=null){
            root=root.right;
        }
        return root.val;
    }
    public TreeNode trimBST(TreeNode root, int low, int high) {
        if(root==null){
            return null;
        }
        root.left=trimBST(root.left, low, high);
        root.right=trimBST(root.right, low, high);
        if(root.val<low  || root.val>high){
            if(root.left==null){
            return root.right;
            }
            else if(root.right==null){
                return root.left;
            }
        }
        return root;
    }
}
